<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>closure on Burning Ashes</title>
    <link>https://daseinphaos.github.io/tags/closure/</link>
    <description>Recent content in closure on Burning Ashes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://daseinphaos.github.io/tags/closure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Closure, Lifetime, and HRT</title>
      <link>https://daseinphaos.github.io/post/closure-lifetime-hrt/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daseinphaos.github.io/post/closure-lifetime-hrt/</guid>
      <description>Intro So here is the thing. Can we write something like
let mut vector = vec![1, 2, 3]; let mut closure = |x| vector.get_mut(x); println!(&amp;#34;{:?}&amp;#34;, closure(2)); in Rust?
The answer is, unfortunately, no.
Compiling it as of rust 1.15.1 would yield some error message like:
error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements--&amp;gt; src\main.rs:100:23|100 | let closure = |x| vector.</description>
    </item>
    
  </channel>
</rss>